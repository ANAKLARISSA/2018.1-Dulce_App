// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#EFEFF4",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "flex": 1,
              "flexDirection": "column",
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "height": 1334,
              }
            }
            virtual={undefined}
          >
            <RCTScrollView
              automaticallyAdjustContentInsets={false}
              contentContainerStyle={
                Array [
                  Object {
                    "padding": undefined,
                  },
                  undefined,
                ]
              }
              contentInset={
                Object {
                  "bottom": 0,
                }
              }
              enableAutomaticScroll={true}
              enableResetScrollToCoords={true}
              extraHeight={75}
              extraScrollHeight={0}
              getScrollResponder={[Function]}
              handleOnScroll={[Function]}
              keyboardDismissMode="interactive"
              keyboardOpeningTime={250}
              keyboardShouldPersistTaps="handled"
              keyboardSpace={0}
              onScroll={[Function]}
              resetKeyboardSpace={[Function]}
              resetScrollToCoords={
                Object {
                  "x": 0,
                  "y": 0,
                }
              }
              scrollEventThrottle={1}
              scrollForExtraHeightOnAndroid={[Function]}
              scrollToEnd={[Function]}
              scrollToFocusedInput={[Function]}
              scrollToPosition={[Function]}
              showsVerticalScrollIndicator={true}
              style={
                Object {
                  "backgroundColor": "transparent",
                  "flex": 1,
                }
              }
              viewIsInsideTabBar={false}
              virtual={undefined}
            >
              <View>
                <ActivityIndicator
                  animating={true}
                  color="purple"
                  hidesWhenStopped={true}
                  size="large"
                  style={
                    Object {
                      "height": 80,
                    }
                  }
                  virtual={undefined}
                />
              </View>
            </RCTScrollView>
          </View>
        </View>
      </View>
    </View>
    <View
      collapsable={undefined}
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "backgroundColor": "#F7F7F7",
          "borderBottomColor": "#A7A7AA",
          "borderBottomWidth": 0.5,
          "height": 64,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 20,
        }
      }
    >
      <View
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          style={
            Object {
              "bottom": 0,
              "flexDirection": "row",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={undefined}
            pointerEvents="box-none"
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "bottom": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <Text
              accessibilityTraits="header"
              accessible={true}
              allowFontScaling={true}
              collapsable={undefined}
              ellipsizeMode="tail"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgba(0, 0, 0, .9)",
                  "fontSize": 17,
                  "fontWeight": "700",
                  "marginHorizontal": 16,
                  "textAlign": "center",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
