// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
    ]
  }
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
          "flexDirection": "column-reverse",
        },
        Object {
          "backgroundColor": "#000",
        },
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={undefined}
        pointerEvents="auto"
        style={
          Object {
            "backgroundColor": "#EFEFF4",
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 5,
            "top": 0,
            "transform": Array [
              Object {
                "translateX": 0,
              },
              Object {
                "translateY": 0,
              },
            ],
          }
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#fd7d01",
                "flex": 0.25,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#f1f1f1",
                  "borderRadius": 5,
                  "height": 40,
                  "margin": 1,
                  "width": 7.5,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#FFF",
                "flex": 8,
                "flexDirection": "column",
              }
            }
          >
            <View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#F8F8F8",
                      "borderBottomColor": "#a7a6ab",
                      "borderBottomWidth": 0.5,
                      "elevation": 3,
                      "flexDirection": "row",
                      "height": 64,
                      "justifyContent": "center",
                      "left": 0,
                      "paddingLeft": 10,
                      "paddingRight": 10,
                      "paddingTop": 15,
                      "right": 0,
                      "shadowColor": undefined,
                      "shadowOffset": undefined,
                      "shadowOpacity": undefined,
                      "shadowRadius": undefined,
                      "top": 0,
                    },
                    Object {
                      "backgroundColor": "#5f4b8b",
                    },
                  ]
                }
                virtual={undefined}
              >
                <View />
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "flex": 1,
                    }
                  }
                  virtual={undefined}
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "color": "#000",
                          "fontFamily": "System",
                          "fontSize": 17,
                          "fontWeight": "600",
                          "textAlign": "center",
                        },
                        Object {
                          "fontFamily": "Raleway",
                        },
                      ]
                    }
                    virtual={undefined}
                  >
                     
                    Meu Perfil
                     
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "flex": 1,
                  "height": 1334,
                }
              }
              virtual={undefined}
            >
              <RCTScrollView
                automaticallyAdjustContentInsets={false}
                contentContainerStyle={
                  Array [
                    Object {
                      "padding": undefined,
                    },
                    undefined,
                  ]
                }
                contentInset={
                  Object {
                    "bottom": 0,
                  }
                }
                enableAutomaticScroll={true}
                enableResetScrollToCoords={true}
                extraHeight={75}
                extraScrollHeight={0}
                getScrollResponder={[Function]}
                handleOnScroll={[Function]}
                keyboardDismissMode="interactive"
                keyboardOpeningTime={250}
                keyboardShouldPersistTaps="handled"
                keyboardSpace={0}
                onScroll={[Function]}
                resetKeyboardSpace={[Function]}
                resetScrollToCoords={
                  Object {
                    "x": 0,
                    "y": 0,
                  }
                }
                scrollEventThrottle={1}
                scrollForExtraHeightOnAndroid={[Function]}
                scrollToEnd={[Function]}
                scrollToFocusedInput={[Function]}
                scrollToPosition={[Function]}
                showsVerticalScrollIndicator={true}
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "flex": 1,
                  }
                }
                viewIsInsideTabBar={false}
                virtual={undefined}
              >
                <View>
                  <ActivityIndicator
                    animating={true}
                    color="#5f4b8b"
                    hidesWhenStopped={true}
                    size="large"
                    style={
                      Object {
                        "height": 80,
                      }
                    }
                    virtual={undefined}
                  />
                </View>
              </RCTScrollView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
