// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "flexDirection": "row",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fd7d01",
        "flex": 0.25,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#f1f1f1",
          "borderRadius": 5,
          "height": 40,
          "margin": 1,
          "width": 7.5,
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#FFF",
        "flex": 8,
        "flexDirection": "column",
      }
    }
  >
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#F8F8F8",
              "borderBottomColor": "#a7a6ab",
              "borderBottomWidth": 0.5,
              "elevation": 3,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 15,
              "right": 0,
              "shadowColor": undefined,
              "shadowOffset": undefined,
              "shadowOpacity": undefined,
              "shadowRadius": undefined,
              "top": 0,
            },
            Object {
              "backgroundColor": "#5f4b8b",
            },
          ]
        }
        virtual={undefined}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "flex": 1,
            }
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 17,
                  "fontWeight": "600",
                  "textAlign": "center",
                },
                Object {
                  "fontFamily": "Raleway",
                },
              ]
            }
            virtual={undefined}
          >
             
            Meu Perfil
             
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "height": 1334,
        }
      }
      virtual={undefined}
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={
          Array [
            Object {
              "padding": undefined,
            },
            undefined,
          ]
        }
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
          }
        }
        viewIsInsideTabBar={false}
        virtual={undefined}
      >
        <View>
          <ActivityIndicator
            animating={true}
            color="#5f4b8b"
            hidesWhenStopped={true}
            size="large"
            style={
              Object {
                "height": 80,
              }
            }
            virtual={undefined}
          />
        </View>
      </RCTScrollView>
    </View>
  </View>
</View>
`;

exports[`testing axios 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ProfileManagerScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <SideBar />,
        <View
          style={
            Object {
              "backgroundColor": "#FFF",
              "flex": 8,
              "flexDirection": "column",
            }
          }
        >
          <ScreenHeader
            icon="arrow-back"
            title="Meu Perfil"
          />
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <SmallLogo />
              <Styled(Text)
                style={
                  Object {
                    "alignSelf": "center",
                    "fontSize": 20,
                    "marginBottom": 15,
                  }
                }
                virtual={undefined}
              >
                Nome:
                	
                	
              </Styled(Text)>
              <Styled(Text)
                style={
                  Object {
                    "alignSelf": "center",
                    "fontSize": 20,
                    "marginBottom": 15,
                  }
                }
                virtual={undefined}
              >
                Email:
                	
                	
                @gmail.com
              </Styled(Text)>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                }
              }
            >
              <IconButton
                Icon="edit"
                onPress={[Function]}
                text="Editar"
              />
              <Styled(Button)
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "height": 50,
                    "justifyContent": "center",
                    "margin": 20,
                    "marginBottom": 20,
                    "marginHorizontal": 120,
                    "width": 170,
                  }
                }
                transparent={true}
                virtual={undefined}
                warning={true}
              >
                <Styled(Text)
                  style={
                    Object {
                      "alignItems": "center",
                      "color": "#fd7d01",
                      "fontFamily": "Raleway",
                      "fontSize": 17,
                    }
                  }
                  virtual={undefined}
                >
                  Excluir conta
                </Styled(Text)>
              </Styled(Button)>
            </View>
          </View>
        </View>,
      ],
      "style": Object {
        "flex": 1,
        "flexDirection": "row",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <ScreenHeader
              icon="arrow-back"
              title="Meu Perfil"
            />,
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <SmallLogo />
                <Styled(Text)
                  style={
                    Object {
                      "alignSelf": "center",
                      "fontSize": 20,
                      "marginBottom": 15,
                    }
                  }
                  virtual={undefined}
                >
                  Nome:
                  	
                  	
                </Styled(Text)>
                <Styled(Text)
                  style={
                    Object {
                      "alignSelf": "center",
                      "fontSize": 20,
                      "marginBottom": 15,
                    }
                  }
                  virtual={undefined}
                >
                  Email:
                  	
                  	
                  @gmail.com
                </Styled(Text)>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                  }
                }
              >
                <IconButton
                  Icon="edit"
                  onPress={[Function]}
                  text="Editar"
                />
                <Styled(Button)
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "height": 50,
                      "justifyContent": "center",
                      "margin": 20,
                      "marginBottom": 20,
                      "marginHorizontal": 120,
                      "width": 170,
                    }
                  }
                  transparent={true}
                  virtual={undefined}
                  warning={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "alignItems": "center",
                        "color": "#fd7d01",
                        "fontFamily": "Raleway",
                        "fontSize": 17,
                      }
                    }
                    virtual={undefined}
                  >
                    Excluir conta
                  </Styled(Text)>
                </Styled(Button)>
              </View>
            </View>,
          ],
          "style": Object {
            "backgroundColor": "#FFF",
            "flex": 8,
            "flexDirection": "column",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "icon": "arrow-back",
              "title": "Meu Perfil",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <SmallLogo />
                  <Styled(Text)
                    style={
                      Object {
                        "alignSelf": "center",
                        "fontSize": 20,
                        "marginBottom": 15,
                      }
                    }
                    virtual={undefined}
                  >
                    Nome:
                    	
                    	
                  </Styled(Text)>
                  <Styled(Text)
                    style={
                      Object {
                        "alignSelf": "center",
                        "fontSize": 20,
                        "marginBottom": 15,
                      }
                    }
                    virtual={undefined}
                  >
                    Email:
                    	
                    	
                    @gmail.com
                  </Styled(Text)>
                </View>,
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                    }
                  }
                >
                  <IconButton
                    Icon="edit"
                    onPress={[Function]}
                    text="Editar"
                  />
                  <Styled(Button)
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": 50,
                        "justifyContent": "center",
                        "margin": 20,
                        "marginBottom": 20,
                        "marginHorizontal": 120,
                        "width": 170,
                      }
                    }
                    transparent={true}
                    virtual={undefined}
                    warning={true}
                  >
                    <Styled(Text)
                      style={
                        Object {
                          "alignItems": "center",
                          "color": "#fd7d01",
                          "fontFamily": "Raleway",
                          "fontSize": 17,
                        }
                      }
                      virtual={undefined}
                    >
                      Excluir conta
                    </Styled(Text)>
                  </Styled(Button)>
                </View>,
              ],
              "style": Object {
                "flex": 1,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <SmallLogo />,
                    <Styled(Text)
                      style={
                        Object {
                          "alignSelf": "center",
                          "fontSize": 20,
                          "marginBottom": 15,
                        }
                      }
                      virtual={undefined}
                    >
                      Nome:
                      	
                      	
                    </Styled(Text)>,
                    <Styled(Text)
                      style={
                        Object {
                          "alignSelf": "center",
                          "fontSize": 20,
                          "marginBottom": 15,
                        }
                      }
                      virtual={undefined}
                    >
                      Email:
                      	
                      	
                      @gmail.com
                    </Styled(Text)>,
                  ],
                  "style": Object {
                    "flex": 1,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Nome:",
                        "	",
                        "	",
                        undefined,
                      ],
                      "style": Object {
                        "alignSelf": "center",
                        "fontSize": 20,
                        "marginBottom": 15,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Array [
                      "Nome:",
                      "	",
                      "	",
                      undefined,
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        "Email:",
                        "	",
                        "	",
                        undefined,
                        "@gmail.com",
                      ],
                      "style": Object {
                        "alignSelf": "center",
                        "fontSize": 20,
                        "marginBottom": 15,
                      },
                      "virtual": undefined,
                    },
                    "ref": null,
                    "rendered": Array [
                      "Email:",
                      "	",
                      "	",
                      undefined,
                      "@gmail.com",
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <IconButton
                      Icon="edit"
                      onPress={[Function]}
                      text="Editar"
                    />,
                    <Styled(Button)
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "height": 50,
                          "justifyContent": "center",
                          "margin": 20,
                          "marginBottom": 20,
                          "marginHorizontal": 120,
                          "width": 170,
                        }
                      }
                      transparent={true}
                      virtual={undefined}
                      warning={true}
                    >
                      <Styled(Text)
                        style={
                          Object {
                            "alignItems": "center",
                            "color": "#fd7d01",
                            "fontFamily": "Raleway",
                            "fontSize": 17,
                          }
                        }
                        virtual={undefined}
                      >
                        Excluir conta
                      </Styled(Text)>
                    </Styled(Button)>,
                  ],
                  "style": Object {
                    "alignItems": "center",
                    "flex": 1,
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "Icon": "edit",
                      "onPress": [Function],
                      "text": "Editar",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Styled(Text)
                        style={
                          Object {
                            "alignItems": "center",
                            "color": "#fd7d01",
                            "fontFamily": "Raleway",
                            "fontSize": 17,
                          }
                        }
                        virtual={undefined}
                      >
                        Excluir conta
                      </Styled(Text)>,
                      "style": Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": 50,
                        "justifyContent": "center",
                        "margin": 20,
                        "marginBottom": 20,
                        "marginHorizontal": 120,
                        "width": 170,
                      },
                      "transparent": true,
                      "virtual": undefined,
                      "warning": true,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Excluir conta",
                        "style": Object {
                          "alignItems": "center",
                          "color": "#fd7d01",
                          "fontFamily": "Raleway",
                          "fontSize": 17,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": "Excluir conta",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <SideBar />,
          <View
            style={
              Object {
                "backgroundColor": "#FFF",
                "flex": 8,
                "flexDirection": "column",
              }
            }
          >
            <ScreenHeader
              icon="arrow-back"
              title="Meu Perfil"
            />
            <View
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <SmallLogo />
                <Styled(Text)
                  style={
                    Object {
                      "alignSelf": "center",
                      "fontSize": 20,
                      "marginBottom": 15,
                    }
                  }
                  virtual={undefined}
                >
                  Nome:
                  	
                  	
                </Styled(Text)>
                <Styled(Text)
                  style={
                    Object {
                      "alignSelf": "center",
                      "fontSize": 20,
                      "marginBottom": 15,
                    }
                  }
                  virtual={undefined}
                >
                  Email:
                  	
                  	
                  @gmail.com
                </Styled(Text)>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                  }
                }
              >
                <IconButton
                  Icon="edit"
                  onPress={[Function]}
                  text="Editar"
                />
                <Styled(Button)
                  style={
                    Object {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "height": 50,
                      "justifyContent": "center",
                      "margin": 20,
                      "marginBottom": 20,
                      "marginHorizontal": 120,
                      "width": 170,
                    }
                  }
                  transparent={true}
                  virtual={undefined}
                  warning={true}
                >
                  <Styled(Text)
                    style={
                      Object {
                        "alignItems": "center",
                        "color": "#fd7d01",
                        "fontFamily": "Raleway",
                        "fontSize": 17,
                      }
                    }
                    virtual={undefined}
                  >
                    Excluir conta
                  </Styled(Text)>
                </Styled(Button)>
              </View>
            </View>
          </View>,
        ],
        "style": Object {
          "flex": 1,
          "flexDirection": "row",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <ScreenHeader
                icon="arrow-back"
                title="Meu Perfil"
              />,
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <SmallLogo />
                  <Styled(Text)
                    style={
                      Object {
                        "alignSelf": "center",
                        "fontSize": 20,
                        "marginBottom": 15,
                      }
                    }
                    virtual={undefined}
                  >
                    Nome:
                    	
                    	
                  </Styled(Text)>
                  <Styled(Text)
                    style={
                      Object {
                        "alignSelf": "center",
                        "fontSize": 20,
                        "marginBottom": 15,
                      }
                    }
                    virtual={undefined}
                  >
                    Email:
                    	
                    	
                    @gmail.com
                  </Styled(Text)>
                </View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                    }
                  }
                >
                  <IconButton
                    Icon="edit"
                    onPress={[Function]}
                    text="Editar"
                  />
                  <Styled(Button)
                    style={
                      Object {
                        "alignItems": "center",
                        "alignSelf": "center",
                        "height": 50,
                        "justifyContent": "center",
                        "margin": 20,
                        "marginBottom": 20,
                        "marginHorizontal": 120,
                        "width": 170,
                      }
                    }
                    transparent={true}
                    virtual={undefined}
                    warning={true}
                  >
                    <Styled(Text)
                      style={
                        Object {
                          "alignItems": "center",
                          "color": "#fd7d01",
                          "fontFamily": "Raleway",
                          "fontSize": 17,
                        }
                      }
                      virtual={undefined}
                    >
                      Excluir conta
                    </Styled(Text)>
                  </Styled(Button)>
                </View>
              </View>,
            ],
            "style": Object {
              "backgroundColor": "#FFF",
              "flex": 8,
              "flexDirection": "column",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "icon": "arrow-back",
                "title": "Meu Perfil",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <SmallLogo />
                    <Styled(Text)
                      style={
                        Object {
                          "alignSelf": "center",
                          "fontSize": 20,
                          "marginBottom": 15,
                        }
                      }
                      virtual={undefined}
                    >
                      Nome:
                      	
                      	
                    </Styled(Text)>
                    <Styled(Text)
                      style={
                        Object {
                          "alignSelf": "center",
                          "fontSize": 20,
                          "marginBottom": 15,
                        }
                      }
                      virtual={undefined}
                    >
                      Email:
                      	
                      	
                      @gmail.com
                    </Styled(Text)>
                  </View>,
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                      }
                    }
                  >
                    <IconButton
                      Icon="edit"
                      onPress={[Function]}
                      text="Editar"
                    />
                    <Styled(Button)
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "height": 50,
                          "justifyContent": "center",
                          "margin": 20,
                          "marginBottom": 20,
                          "marginHorizontal": 120,
                          "width": 170,
                        }
                      }
                      transparent={true}
                      virtual={undefined}
                      warning={true}
                    >
                      <Styled(Text)
                        style={
                          Object {
                            "alignItems": "center",
                            "color": "#fd7d01",
                            "fontFamily": "Raleway",
                            "fontSize": 17,
                          }
                        }
                        virtual={undefined}
                      >
                        Excluir conta
                      </Styled(Text)>
                    </Styled(Button)>
                  </View>,
                ],
                "style": Object {
                  "flex": 1,
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <SmallLogo />,
                      <Styled(Text)
                        style={
                          Object {
                            "alignSelf": "center",
                            "fontSize": 20,
                            "marginBottom": 15,
                          }
                        }
                        virtual={undefined}
                      >
                        Nome:
                        	
                        	
                      </Styled(Text)>,
                      <Styled(Text)
                        style={
                          Object {
                            "alignSelf": "center",
                            "fontSize": 20,
                            "marginBottom": 15,
                          }
                        }
                        virtual={undefined}
                      >
                        Email:
                        	
                        	
                        @gmail.com
                      </Styled(Text)>,
                    ],
                    "style": Object {
                      "flex": 1,
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "Nome:",
                          "	",
                          "	",
                          undefined,
                        ],
                        "style": Object {
                          "alignSelf": "center",
                          "fontSize": 20,
                          "marginBottom": 15,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Array [
                        "Nome:",
                        "	",
                        "	",
                        undefined,
                      ],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [
                          "Email:",
                          "	",
                          "	",
                          undefined,
                          "@gmail.com",
                        ],
                        "style": Object {
                          "alignSelf": "center",
                          "fontSize": 20,
                          "marginBottom": 15,
                        },
                        "virtual": undefined,
                      },
                      "ref": null,
                      "rendered": Array [
                        "Email:",
                        "	",
                        "	",
                        undefined,
                        "@gmail.com",
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <IconButton
                        Icon="edit"
                        onPress={[Function]}
                        text="Editar"
                      />,
                      <Styled(Button)
                        style={
                          Object {
                            "alignItems": "center",
                            "alignSelf": "center",
                            "height": 50,
                            "justifyContent": "center",
                            "margin": 20,
                            "marginBottom": 20,
                            "marginHorizontal": 120,
                            "width": 170,
                          }
                        }
                        transparent={true}
                        virtual={undefined}
                        warning={true}
                      >
                        <Styled(Text)
                          style={
                            Object {
                              "alignItems": "center",
                              "color": "#fd7d01",
                              "fontFamily": "Raleway",
                              "fontSize": 17,
                            }
                          }
                          virtual={undefined}
                        >
                          Excluir conta
                        </Styled(Text)>
                      </Styled(Button)>,
                    ],
                    "style": Object {
                      "alignItems": "center",
                      "flex": 1,
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "Icon": "edit",
                        "onPress": [Function],
                        "text": "Editar",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Styled(Text)
                          style={
                            Object {
                              "alignItems": "center",
                              "color": "#fd7d01",
                              "fontFamily": "Raleway",
                              "fontSize": 17,
                            }
                          }
                          virtual={undefined}
                        >
                          Excluir conta
                        </Styled(Text)>,
                        "style": Object {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "height": 50,
                          "justifyContent": "center",
                          "margin": 20,
                          "marginBottom": 20,
                          "marginHorizontal": 120,
                          "width": 170,
                        },
                        "transparent": true,
                        "virtual": undefined,
                        "warning": true,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Excluir conta",
                          "style": Object {
                            "alignItems": "center",
                            "color": "#fd7d01",
                            "fontFamily": "Raleway",
                            "fontSize": 17,
                          },
                          "virtual": undefined,
                        },
                        "ref": null,
                        "rendered": "Excluir conta",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
