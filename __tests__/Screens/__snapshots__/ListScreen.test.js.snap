// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserList snapshot test 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListScreen />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ScreenHeader
          title="Lista de Médicos"
        />,
        <FlatList
          data={
            Object {
              "message": "404 data not found",
            }
          }
          disableVirtualization={false}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onEndReachedThreshold={2}
          renderItem={[Function]}
          scrollEventThrottle={50}
          updateCellsBatchingPeriod={50}
          windowSize={21}
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "title": "Lista de Médicos",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "data": Object {
            "message": "404 data not found",
          },
          "disableVirtualization": false,
          "horizontal": false,
          "initialNumToRender": 10,
          "keyExtractor": [Function],
          "maxToRenderPerBatch": 10,
          "numColumns": 1,
          "onEndReachedThreshold": 2,
          "renderItem": [Function],
          "scrollEventThrottle": 50,
          "updateCellsBatchingPeriod": 50,
          "windowSize": 21,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "children": Array [
              <ScreenHeader
                title="Lista de Médicos"
              />,
              <Styled(Container)
                virtual={undefined}
              >
                <Styled(Content)
                  virtual={undefined}
                >
                  <Styled(Spinner)
                    color="#5f4b8b"
                    virtual={undefined}
                  />
                </Styled(Content)>
              </Styled(Container)>,
            ],
          },
          Object {},
        ],
        Array [
          Object {
            "automaticallyAdjustContentInsets": false,
            "children": <Styled(Spinner)
              color="#5f4b8b"
              virtual={undefined}
            />,
            "contentContainerStyle": Array [
              Object {
                "padding": undefined,
              },
              undefined,
            ],
            "contentInset": Object {
              "bottom": 0,
            },
            "enableAutomaticScroll": true,
            "enableResetScrollToCoords": true,
            "extraHeight": 75,
            "extraScrollHeight": 0,
            "getScrollResponder": [Function],
            "handleOnScroll": [Function],
            "keyboardDismissMode": "interactive",
            "keyboardOpeningTime": 250,
            "keyboardShouldPersistTaps": "handled",
            "keyboardSpace": 0,
            "onScroll": [Function],
            "resetKeyboardSpace": [Function],
            "resetScrollToCoords": Object {
              "x": 0,
              "y": 0,
            },
            "scrollEventThrottle": 1,
            "scrollForExtraHeightOnAndroid": [Function],
            "scrollToEnd": [Function],
            "scrollToFocusedInput": [Function],
            "scrollToPosition": [Function],
            "showsVerticalScrollIndicator": true,
            "style": Object {
              "backgroundColor": "transparent",
              "flex": 1,
            },
            "viewIsInsideTabBar": false,
            "virtual": undefined,
          },
          Object {},
        ],
        Array [
          Object {
            "children": Array [],
            "data": Object {
              "message": "404 data not found",
            },
            "disableVirtualization": false,
            "getItem": [Function],
            "getItemCount": [Function],
            "horizontal": false,
            "initialNumToRender": 10,
            "invertStickyHeaders": undefined,
            "keyExtractor": [Function],
            "maxToRenderPerBatch": 10,
            "numColumns": 1,
            "onContentSizeChange": [Function],
            "onEndReachedThreshold": 2,
            "onLayout": [Function],
            "onMomentumScrollEnd": [Function],
            "onScroll": [Function],
            "onScrollBeginDrag": [Function],
            "onScrollEndDrag": [Function],
            "renderItem": [Function],
            "scrollEventThrottle": 50,
            "stickyHeaderIndices": Array [],
            "updateCellsBatchingPeriod": 50,
            "viewabilityConfigCallbackPairs": Array [],
            "windowSize": 21,
          },
          Object {},
        ],
      ],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ScreenHeader
            title="Lista de Médicos"
          />,
          <FlatList
            data={
              Object {
                "message": "404 data not found",
              }
            }
            disableVirtualization={false}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onEndReachedThreshold={2}
            renderItem={[Function]}
            scrollEventThrottle={50}
            updateCellsBatchingPeriod={50}
            windowSize={21}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "title": "Lista de Médicos",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "data": Object {
              "message": "404 data not found",
            },
            "disableVirtualization": false,
            "horizontal": false,
            "initialNumToRender": 10,
            "keyExtractor": [Function],
            "maxToRenderPerBatch": 10,
            "numColumns": 1,
            "onEndReachedThreshold": 2,
            "renderItem": [Function],
            "scrollEventThrottle": 50,
            "updateCellsBatchingPeriod": 50,
            "windowSize": 21,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "children": Array [
                <ScreenHeader
                  title="Lista de Médicos"
                />,
                <Styled(Container)
                  virtual={undefined}
                >
                  <Styled(Content)
                    virtual={undefined}
                  >
                    <Styled(Spinner)
                      color="#5f4b8b"
                      virtual={undefined}
                    />
                  </Styled(Content)>
                </Styled(Container)>,
              ],
            },
            Object {},
          ],
          Array [
            Object {
              "automaticallyAdjustContentInsets": false,
              "children": <Styled(Spinner)
                color="#5f4b8b"
                virtual={undefined}
              />,
              "contentContainerStyle": Array [
                Object {
                  "padding": undefined,
                },
                undefined,
              ],
              "contentInset": Object {
                "bottom": 0,
              },
              "enableAutomaticScroll": true,
              "enableResetScrollToCoords": true,
              "extraHeight": 75,
              "extraScrollHeight": 0,
              "getScrollResponder": [Function],
              "handleOnScroll": [Function],
              "keyboardDismissMode": "interactive",
              "keyboardOpeningTime": 250,
              "keyboardShouldPersistTaps": "handled",
              "keyboardSpace": 0,
              "onScroll": [Function],
              "resetKeyboardSpace": [Function],
              "resetScrollToCoords": Object {
                "x": 0,
                "y": 0,
              },
              "scrollEventThrottle": 1,
              "scrollForExtraHeightOnAndroid": [Function],
              "scrollToEnd": [Function],
              "scrollToFocusedInput": [Function],
              "scrollToPosition": [Function],
              "showsVerticalScrollIndicator": true,
              "style": Object {
                "backgroundColor": "transparent",
                "flex": 1,
              },
              "viewIsInsideTabBar": false,
              "virtual": undefined,
            },
            Object {},
          ],
          Array [
            Object {
              "children": Array [],
              "data": Object {
                "message": "404 data not found",
              },
              "disableVirtualization": false,
              "getItem": [Function],
              "getItemCount": [Function],
              "horizontal": false,
              "initialNumToRender": 10,
              "invertStickyHeaders": undefined,
              "keyExtractor": [Function],
              "maxToRenderPerBatch": 10,
              "numColumns": 1,
              "onContentSizeChange": [Function],
              "onEndReachedThreshold": 2,
              "onLayout": [Function],
              "onMomentumScrollEnd": [Function],
              "onScroll": [Function],
              "onScrollBeginDrag": [Function],
              "onScrollEndDrag": [Function],
              "renderItem": [Function],
              "scrollEventThrottle": 50,
              "stickyHeaderIndices": Array [],
              "updateCellsBatchingPeriod": 50,
              "viewabilityConfigCallbackPairs": Array [],
              "windowSize": 21,
            },
            Object {},
          ],
        ],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`renders correctly 1`] = `
<RCTScrollView>
  <View>
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#F8F8F8",
              "borderBottomColor": "#a7a6ab",
              "borderBottomWidth": 0.5,
              "elevation": 3,
              "flexDirection": "row",
              "height": 64,
              "justifyContent": "center",
              "left": 0,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 15,
              "right": 0,
              "shadowColor": undefined,
              "shadowOffset": undefined,
              "shadowOpacity": undefined,
              "shadowRadius": undefined,
              "top": 0,
            },
            Object {
              "backgroundColor": "#5f4b8b",
            },
          ]
        }
        virtual={undefined}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "flex": 1,
            }
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            numberOfLines={1}
            style={
              Array [
                Object {
                  "color": "#000",
                  "fontFamily": "System",
                  "fontSize": 17,
                  "fontWeight": "600",
                  "textAlign": "center",
                },
                Object {
                  "fontFamily": "Raleway",
                },
              ]
            }
            virtual={undefined}
          >
             
            Lista de Médicos
             
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "height": 1334,
        }
      }
      virtual={undefined}
    >
      <RCTScrollView
        automaticallyAdjustContentInsets={false}
        contentContainerStyle={
          Array [
            Object {
              "padding": undefined,
            },
            undefined,
          ]
        }
        contentInset={
          Object {
            "bottom": 0,
          }
        }
        enableAutomaticScroll={true}
        enableResetScrollToCoords={true}
        extraHeight={75}
        extraScrollHeight={0}
        getScrollResponder={[Function]}
        handleOnScroll={[Function]}
        keyboardDismissMode="interactive"
        keyboardOpeningTime={250}
        keyboardShouldPersistTaps="handled"
        keyboardSpace={0}
        onScroll={[Function]}
        resetKeyboardSpace={[Function]}
        resetScrollToCoords={
          Object {
            "x": 0,
            "y": 0,
          }
        }
        scrollEventThrottle={1}
        scrollForExtraHeightOnAndroid={[Function]}
        scrollToEnd={[Function]}
        scrollToFocusedInput={[Function]}
        scrollToPosition={[Function]}
        showsVerticalScrollIndicator={true}
        style={
          Object {
            "backgroundColor": "transparent",
            "flex": 1,
          }
        }
        viewIsInsideTabBar={false}
        virtual={undefined}
      >
        <View>
          <ActivityIndicator
            animating={true}
            color="#5f4b8b"
            hidesWhenStopped={true}
            size="large"
            style={
              Object {
                "height": 80,
              }
            }
            virtual={undefined}
          />
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTScrollView>
`;
